{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onChecked","id","CreateArea","useState","setnote","adddetail","handlechange","event","target","name","value","prevValue","onChange","placeholder","rows","additem","preventDefault","App","newnote","addnewnote","deletenote","console","log","prevValues","filter","index","map","displayitem","key","ReactDOM","render","document","getElementById"],"mappings":"gMAUeA,MARf,WACE,OACE,gCACE,wCCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,KCYPG,MAbf,SAAcC,GAIZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAPZ,WACEJ,EAAMK,UAAUL,EAAMM,MAMS,Y,cCyCpBC,MApDf,SAAoBP,GAElB,MAAyBQ,mBAAS,CAChCN,MAAO,GACPC,QAAQ,KACR,mBAHIM,EAAO,KAACC,EAAS,KAKvB,SAASC,EAAaC,GACpB,MAAkBA,EAAMC,OAAlBC,EAAI,EAAJA,KAAKC,EAAK,EAALA,MAEXL,GAAU,SAACM,GACT,kCACGA,GAAS,kBACXF,EAAMC,OAmBX,OACE,6BACE,8BACE,2BAAQE,SAAUN,EAClBG,KAAK,QACLI,YAAY,QACZH,MAAON,EAAQP,QAEf,8BAAUe,SAAUN,EACpBG,KAAK,UACLC,MAAON,EAAQN,QACfe,YAAY,iBAAiBC,KAAK,MAClC,4BAAQf,QAvBhB,SAAoBQ,GAClBZ,EAAMoB,QAAQX,GACdC,EAAU,CACRR,MAAO,GACPC,QAAQ,KAEVS,EAAMS,mBAiB4B,UCgBrBC,MAvDf,WAGE,MAA0Bd,mBAAS,IAAG,mBAAhCe,EAAO,KAACC,EAAU,KAU1B,SAASC,EAAWnB,GAGlBoB,QAAQC,IAAIrB,GACZkB,GAAW,SAAAI,GACT,OAAQA,EAAWC,QAAO,SAACN,EAAQO,GACjC,OAAOA,IAAUxB,QAcrB,OACE,6BACE,kBAAC,EAAM,MACP,kBAAC,EAAU,CAAEc,QA/BjB,SAAmBX,GAClBe,GAAW,SAAAI,GACV,MAAM,GAAN,mBAAUA,GAAU,CAACnB,UAgCjBc,EAAQQ,KAAI,SAACC,EAAYF,GACxB,OACA,kBAAC,EAAI,CACLG,IAAKH,EAAOxB,GAAIwB,EACjB5B,MAAO8B,EAAY9B,MACnBC,QAAS6B,EAAY7B,QAErBE,UAAWoB,OAIb,kBAAC,EAAM,QCrDbS,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.5c022825.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n\n\n\nfunction Note(props) {\n  function handleClick(){\n    props.onChecked(props.id);\n  }\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n\n  const[setnote,adddetail]=useState({\n    title :\"\",\n    content:\"\"\n  });\n\n  function handlechange(event){\n    const{name,value}=event.target;\n  \n    adddetail((prevValue)=>{\n      return{\n      ...prevValue,\n      [name]:value\n      };\n    \n  });\n    \n \n\n  }\nfunction submitnote(event){\n  props.additem(setnote);\n  adddetail({\n    title :\"\",\n    content:\"\"\n  });\n  event.preventDefault();\n   \n\n\n}\n  return (\n    <div>\n      <form>\n        <input  onChange={handlechange}\n        name=\"title\" \n        placeholder=\"Title\"\n        value={setnote.title} \n        />\n        <textarea onChange={handlechange}\n        name=\"content\" \n        value={setnote.content} \n        placeholder=\"Take a note...\" rows=\"3\" />\n        <button onClick={submitnote}\n      \n        >Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n\n\n  const[newnote,addnewnote]=useState([]);\n\n  function addtolist(setnote){\n   addnewnote(prevValues=>{\n    return[...prevValues,setnote];\n    \n    \n   });\n\n  }\nfunction deletenote(id){\n\n\n  console.log(id);\n  addnewnote(prevValues=>{\n    return  prevValues.filter((newnote,index)=>{\n      return index !== id;\n      \n    });\n  });\n/*addnewnote((prevValues)=>{\n  \n   return prevValues.filter((newnote,index)=>{\n      return\n         index !== id;\n      \n    });    \n  });*/\n}\n\n  return (\n    <div>\n      <Header />\n      <CreateArea  additem={addtolist} />\n   \n     \n       {newnote.map((displayitem,index)=>{\n         return(\n         <Note\n         key={index} id={index} \n        title={displayitem.title} \n        content={displayitem.content}\n        \n        onChecked={deletenote} />\n         )\n       })}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}